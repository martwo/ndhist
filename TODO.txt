- Implement copy constructor for the Axis class and its derived classes, i.e.
  constant_bin_width_axis and generic_axis.

- Implement copy constructor for detail::ndarray_storage that copies also the
  bytearray.

- Introduce interface via static function calls to the ValueCache class, so it
  can be hold by ndhist directly as member (without the need for a shared
  pointer). This eliminates the need for an explicit copy constructor for
  ValueCache.

- Implement clear() method, that sets all bin content values to zero.

- Implement the ndhist.copy() method that creates a deep copy of the ndhist
  object.

- Implement rebin_axis(axis, nbins_to_merge) that should change the current
  ndhist object. In case a copy is needed beforehand, the user should call
  ndhist.copy().rebin_axis(). So rebin_axis must return a reference to its
  ndhist object.
  The reason for letting rebin_axis operate on the ndhist object itself is the
  fact, that this operation can be done very efficiently without the need of
  a copy of all the data. In principle rebin_axis could take a kwarg named
  copy=True, that would call the copy() method first if needed. This would mimic
  the behavior of dashi, that always creates a copy when rebinning.
  In principle, rebin_axis could also take a tuple for axis and nbins_to_merge
  and could rebin several axes at once.

- Implement advanced slicing a la numpy.

- Write unit tests for the different possibilities of filling values, i.e.
  * underflow behavior,
  * overflow behavior,
  * auto extendable axis

- Write unit tests for basic ndhist slicing.

- Implement the most up-to-date fill procedure also for a structured ndarray
  given as ndvalues object. (generic_nd_trais)

- Overwork the ndhist.extend_bin_content_array() function. There should be a
  faster way of initializing the extra bins.

- Add target "html" to the cmake build system to generate HTML documentation
  using Sphinx.


