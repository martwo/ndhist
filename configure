#!/usr/bin/env python

from optparse import OptionParser
from os import system

parser = OptionParser()
parser.add_option("", "--prefix", type="string", dest="prefix", default=".",
    help="The path where the software should get installed to. "
         "By default it installs into the build directory.", metavar="PATH")
parser.add_option("", "--build_type", type="string", dest="build_type", default="Release",
    help="The cmake build type. Possible values are: None, Debug, Release")
parser.add_option("", "--compiler", type="string", dest="compiler", default="gcc",
    help="The C/C++ compiler to use. Possible values are \"gcc\" and \"clang\".")
(options, args) = parser.parse_args()

if(options.compiler == 'gcc'):
    c_compiler = '`which gcc`'
    cxx_compiler = '`which g++`'
elif(options.compiler == 'clang'):
    c_compiler = '`which clang`'
    cxx_compiler = '`which clang++`'
else:
    raise ValueError("The compiler option %s is not supported!"%(options.compiler))

print("Configuring ndhist ...")
print("    install prefix: %s"%(options.prefix))
print("    C compiler    : %s"%(c_compiler))
print("    C++ compiler  : %s"%(cxx_compiler))

system("rm -rf build")
system("mkdir -p build")
system("cd build && /usr/bin/env cmake -DCMAKE_BUILD_TYPE=\"%s\" -DCMAKE_INSTALL_PREFIX=\"%s\" -DCMAKE_C_COMPILER=%s -DCMAKE_CXX_COMPILER=%s .."%(options.build_type, options.prefix, c_compiler, cxx_compiler))
